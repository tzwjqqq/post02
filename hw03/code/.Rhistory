#display the name, team, and salary, of the top-5 highest paid players
player_salary <- arrange(dat, -salary)
top5_salary <- slice(player_salary, 1:5)
select(top5_salary, player, team, salary)
#display the name, team, and points3, of the top 10 three-point players
player_point3 <- arrange(dat, points3)
top10_point3 <- slice(player_point3, 1:5)
select(top10_point3, player, team, points3)
# create a data frame gsw_mpg of GSW players, that contains variables for player name, experience, and min_per_game (minutes per game), sorted by min_per_game (in descending order)
gsw4 <- mutate(GSW_players, min_per_game = minutes/games)
gsw5 <- select(gsw4, player, experience, min_per_game)
gsw_mpg <- arrange(gsw5, -min_per_game)
gsw_mpg
# the largest height value
summarise(dat, max = max(dat$height))
# Standard Deviation of point3
summarise(dat, sd_point3 = sd(dat$points3))
# the median of three-points, grouped by team
summarise(
group_by(dat, team),
meadian_point3 = median(dat$points3)
)
# average triple points by team, in ascending order, of the bottom-5 teams (worst 3pointer teams)
avg_point3 <- summarise(
group_by(dat, team),
mean_point3 = mean(dat$points3)
)
avg_point3_asc <- arrange(avg_point3, mean_point3)
slice(avg_point3_asc, 1:5)
#plotting
ggplot(data = gsw) +
geom_point(aes(x = weight, y = height))
#adding geom_text of players' names
ggplot(data = gsw) +
geom_point(aes(x = weight, y = height)) +
geom_text(x = gsw$weight, y = gsw$height, label = gsw$player)
#scatterplotting
ggplot(data = gsw) +
geom_point(aes(x = weight, y = height) )+
geom_label(x = gsw$weight, y = gsw$height, label = gsw$player)
#density plot of salary
ggplot(data = dat, aes(x = salary)) +
geom_density()
#histogram of point2
hist(dat$points2)
#barchart of position
table <- table(dat$position)
barplot(table, main = 'Density of Positions')
#scatterplot og experience and salary of all centers, and add a regression line
player_C <- filter(dat, position == 'C')
ggplot(data = player_C, aes(x = experience, y = salary)) +
geom_smooth()
#facetiming
ggplot(data = dat, aes(x =experience, y = salary)) +
geom_point(aes(color = position)) +
facet_grid(~position)
ggplot(data = dat, aes(x =experience, y = salary)) +
geom_point(aes(color = position)) +
facet_grid(~team)
ggplot(data = dat, aes(x = age)) +
geom_density() +
facet_grid(~team)
ggplot(data = dat, aes(x = weight, y = height)) +
geom_density2d() +
geom_point(aes(color = position))+
facet_grid(~position)
dat[]
GSW_players
library(dplyr)
library(ggplot2)
github <- "https://github.com/ucb-stat133/stat133-fall-2017/raw/master/"
csv <- "data/nba2017-players.csv"
download.file(url = paste0(github, csv), destfile = "nba2017-players.csv")
dat <- read.csv("nba2017-players.csv", stringsAsFactors = FALSE)
# first 5 rows
five_rows <- slice(dat, 1:5)
five_rows
# rows 10,15,20...50
by_5_rows <- slice(dat, seq(from=10, to = 50, by = 5))
by_5_rows
#last 5 rows
nrow(dat) #number of rows in dat
last_five_rows <- slice(dat, 437:441)
last_five_rows
# players who are less than 70 inches
less_70 <- filter(dat, height < 70)
less_70
#GSW players
GSW_players <- filter(dat, team == 'GSW')
GSW_players
#GSW center 'C' players
GSW_C <- filter(GSW_players, position == 'C')
GSW_C
#LAL players' names
LAL_players <- filter(dat, team == 'LAL')
LAL_players_names <- select(LAL_players, player)
LAL_players_names
#GSW 'PG' players' names and salaries
GSW_PG <- filter(GSW_players, position == 'PG')
GSW_PG_n_s <- select(GSW_PG, player, salary)
GSW_PG_n_s
# names, ages and teams of players with more than 10 yrs experience and less than 10 million salary
player1 <- filter(dat, experience > 10, salary < 10000000)
player1_n_a_t <- select(player1, player, age, team)
player1_n_a_t
# the name, team, height, and weight, of rookie players, 20 years old, displaying only the first five occurrences (i.e. rows)
player2 <- filter(dat, experience == 0, age == 20)
player2_n_t_h_w <- select(player2, player, team, weight, height)
player3 <- slice(player2_n_t_h_w, 1:5)
player3
#data frame
gsw <- filter(dat, team == 'GSW')
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
gsw
gsw2 <- mutate(gsw, product = weight * height)
gsw2
gsw3 <- mutate(gsw2, log_weight = log(weight), log_height = log(height))
gsw3
#players less than 71 inches, order in increasing order
less_71 <- filter(dat, height < 71)
player4 <- arrange(less_71, height)
player4
#display the name, team, and salary, of the top-5 highest paid players
player_salary <- arrange(dat, -salary)
top5_salary <- slice(player_salary, 1:5)
select(top5_salary, player, team, salary)
#display the name, team, and points3, of the top 10 three-point players
player_point3 <- arrange(dat, points3)
top10_point3 <- slice(player_point3, 1:5)
select(top10_point3, player, team, points3)
# create a data frame gsw_mpg of GSW players, that contains variables for player name, experience, and min_per_game (minutes per game), sorted by min_per_game (in descending order)
gsw4 <- mutate(GSW_players, min_per_game = minutes/games)
gsw5 <- select(gsw4, player, experience, min_per_game)
gsw_mpg <- arrange(gsw5, -min_per_game)
gsw_mpg
# the largest height value
summarise(dat, max = max(dat$height))
# Standard Deviation of point3
summarise(dat, sd_point3 = sd(dat$points3))
# the median of three-points, grouped by team
summarise(
group_by(dat, team),
meadian_point3 = median(dat$points3)
)
# average triple points by team, in ascending order, of the bottom-5 teams (worst 3pointer teams)
avg_point3 <- summarise(
group_by(dat, team),
mean_point3 = mean(dat$points3)
)
avg_point3_asc <- arrange(avg_point3, mean_point3)
slice(avg_point3_asc, 1:5)
#plotting
ggplot(data = gsw) +
geom_point(aes(x = weight, y = height))
#adding geom_text of players' names
ggplot(data = gsw) +
geom_point(aes(x = weight, y = height)) +
geom_text(x = gsw$weight, y = gsw$height, label = gsw$player)
#scatterplotting
ggplot(data = gsw) +
geom_point(aes(x = weight, y = height) )+
geom_label(x = gsw$weight, y = gsw$height, label = gsw$player)
#density plot of salary
ggplot(data = dat, aes(x = salary)) +
geom_density()
#histogram of point2
hist(dat$points2)
#barchart of position
table <- table(dat$position)
barplot(table, main = 'Density of Positions')
#scatterplot og experience and salary of all centers, and add a regression line
player_C <- filter(dat, position == 'C')
ggplot(data = player_C, aes(x = experience, y = salary)) +
geom_smooth()
#facetiming
ggplot(data = dat, aes(x =experience, y = salary)) +
geom_point(aes(color = position)) +
facet_grid(~position)
ggplot(data = dat, aes(x =experience, y = salary)) +
geom_point(aes(color = position)) +
facet_grid(~team)
ggplot(data = dat, aes(x = age)) +
geom_density() +
facet_grid(~team)
ggplot(data = dat, aes(x = weight, y = height)) +
geom_density2d() +
facet_grid(~position)
ggplot(data = GSW_players, aes(x =experience, y = salary)) +
geom_point(aes(color = position)) +
theme_bw()
ggplot(data = GSW_players, aes(x =experience, y = salary)) +
geom_point(aes(color = position)) +
theme_bw()
ggplot(data = GSW_players, aes(x =experience, y = salary)) +
geom_point(aes(color = position)) +
theme_classic()
ggplot(data = GSW_players, aes(x =experience, y = salary)) +
geom_point(aes(color = position)) +
theme_minimal()
ggplot(data = GSW_players, aes(x =experience, y = salary)) +
geom_point(aes(color = position)) +
theme_dark()
# packages
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
data
names(data)
data <- read_csv('nba2017-players.csv')
warriors <- data.frame(data, filter(team = 'GSW'), arrange(data, by = salary))
?rite.csv()
?write write.csv
?write.csv
# packages
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
#Importing data
df <- read_csv('nba2017-players.csv')
GSW_players <- filter(df, team = 'GSW')
arrange(GSW_players, salary)
warriors <- data.frame(GSW_players)
write.csv(warriors, '/Users/Jade/lab06/data')
GSW_players <- filter(df, team == 'GSW')
GSW_players <- filter(df, team == 'GSW')
GSW_players <- filter(df, team == 'GSW')
arrange(GSW_players, salary)
warriors <- data.frame(GSW_players)
write.csv(warriors, file = '/Users/Jade/lab06/data/warriors.csv')
write.csv(lakers, file = '/Users/Jade/lab06/data/lakers.csv')
LAL_players <- filter(df, team == 'LAL')
arrange(LAL_players, salary)
lakers <- data.frame(LAL_players)
write.csv(lakers, file = '/Users/Jade/lab06/data/lakers.csv')
str(df)
summ
sink(file = '/Users/Jade/lab06/output/data-structure.txt')
str(df)
sink()
sink(file = '/Users/Jade/lab06/output/summary-warriors.txt')
summary(warriors)
sink()
sink(file = '/Users/Jade/lab06/output/summary-lakers.txt')
summary(lakers)
sink()
sink()
sink(file = '/Users/Jade/lab06/output/data-structure.txt')
str(df)
sink()
sink(file = '/Users/Jade/lab06/output/summary-warriors.txt')
summary(warriors)
sink()
sink(file = '/Users/Jade/lab06/output/summary-lakers.txt')
summary(lakers)
sink()
?plot()
?pch
plot(df$height, df$weight, xlab = 'Height', ylab = 'Weight', resolution = 300 )
plot(df$height, df$weight, xlab = 'Height', ylab = 'Weight')
()
png(filename = '/Users/Jade/lab06/images/weight-height-plot.png')
plot(df$height, df$weight, xlab = 'Height', ylab = 'Weight')
dev.off()
plot(df$height, df$weight, xlab = 'Height', ylab = 'Weight')
?height
?png
?ggplot
?plot(height)
?ggsave
?facet
?facet_grid
?face
LAL_players %>%
select(names)
LAL_players %>%
select(player)
GSW_players %>%
filter(position == 'PG') %>%
select(player , salary)
df %>%
filter(experience > 10, salary < 10000000) %>%
select(player, age, team)
head(df %>%
filter(experience == 0, age == 20) %>%
select(player, team, height, weight),
n = 5)
gsw_mpg <- df %>%
data.frame(
'Names' = player,
'Experience' = experience,
'Min_per_game' = minutes/games) %>%
arrange(minutes/games)
gsw_mpg
names(df)
gsw_mpg <- df %>%
data.frame(
'Names' = player,
'Experience' = experience,
'Min_per_game' = minutes/games) %>%
arrange(minutes/games)
gsw_mpg <- df %>%
data.frame(
'Names' = player,
'Experience' = experience,
'Min_per_game' = minutes) %>%
arrange(minutes/games)
min_per_game <- df$minutes/df$games
gsw_mpg <- df %>%
data.frame(
'Names' = player,
'Experience' = experience,
'Min_per_game' = min_per_game) %>%
arrange(min_per_game)
gsw_mpg
gsw_mpg <- df %>%
data.frame(
'Names' = player,
'Experience' = experience,
'Min_per_game' = min_per_game) %>%
arrange(des(min_per_game))
gsw_mpg
names(df)
tail(df %>%
group_by(team) %>%
arrange(mean(points3)) %>%
select(team),
n = 5)
tail(df %>%
group_by(team) %>%
select(team, points3),
arrange(mean(points3)),
n = 5)
df %>%
group_by(team) %>%
select(team,
df %>% group_by(team)
tail(df %>%
group_by(team) %>%
summarise(
team = team,
avg_points3 = mean(points3)) %>%
arrange(avg_points3),
n = 5)
tail(df %>%
group_by(team) %>%
summarise(
team = team,
avg_points3 = mean(points3)) %>%
arrange(avg_points3),
n = 5)
tail(df %>%
group_by(team) %>%
summarise(
team = team,
avg_points3 = mean(points3)) %>%
arrange(avg_points3),
n = 5)
tail(df %>%
group_by(team) %>%
summarise(
Team = team,
avg_points3 = mean(points3)) %>%
arrange(avg_points3),
n = 5)
tail(df %>%
group_by(team) %>%
select(team,
avg_points3 = mean(points3)) %>%
arrange(avg_points3),
n = 5)
'Names' = player,
'Experience' = experience,
'Min_per_game' = min_per_game) %>%
arrange(des(min_per_game))
'Names' = player,
'Experience' = experience,
'Min_per_game' = min_per_game) %>%
arrange(desc(min_per_game))
class(min_per_game)
?arrange()
gsw_mpg <- df %>%
min_per_game = minutes/games %>%
data.frame(
'Names' = player,
'Experience' = experience,
'Min_per_game' = min_per_game) %>%
arrange(-min_per_game)
class(minutes)
min_per_game <- df %>% minutes/games
min_per_game <- df$minutes/df$games
class()
class(min_per_game)
arrange(df, min_per_game)
tail(df %>%
group_by(team) %>%
avg_points3 = mean(points3) %>%
arrange(avg_points3) %>%
select(team),
n = 5)
avg_points3 <-  mean(df$points3)
tail(df %>%
group_by(team) %>%
arrange(avg_points3) %>%
select(team),
n = 5)
df
df %>%
group_by(team)
df %>%
group_by(team) %>%
arrange(avg_points3)
df %>%
group_by(team) %>%
summarise(team, avg_points3 = mean(points3)) %>%
arrange(avg_points3)
df %>%
group_by(team) %>%
summarise(avg_points3 = mean(points3)) %>%
arrange(avg_points3)
players1_age <- df %>%
filter(position == 'PF',
experience >= 5,
experience <= 10) %>%
select(age)
mean(players1_age) #mean
sd(players1_age) #standard deviation
players1_age
mean(players1_age)
age1 <- df %>%
filter(position == 'PF',
experience >= 5,
experience <= 10) %>%
select(age)age1 <- df %>%
filter(position == 'PF',
experience >= 5,
experience <= 10) %>%
select(age)
age1 <- df %>%
filter(position == 'PF',
experience >= 5,
experience <= 10) %>%
select(age)
mean
mean(age1)
class(age1)
as.numeric(age1)
as.factor(age1)
as.integer(age1)
as.logical(age1)
player1 <- df %>%
filter(position == 'PF',
experience >= 5,
experience <= 10)
mean(player1$age)
players1 %>% sd(age)
sd(players1$age) #standard deviation
sd(players1$age) #standard deviation
players1 <- df %>%
filter(position == 'PF',
experience >= 5,
experience <= 10)
mean(players1$age) #mean
sd(players1$age) #standard deviation
library(readr)    # importing data
sink(file = '/Users/Jade/lab06/output/data-structure.txt')
str(df)
sink()
sink(file = '/Users/Jade/lab06/output/summary-warriors.txt')
summary(warriors)
sink()
sink(file = '/Users/Jade/lab06/output/summary-lakers.txt')
summary(lakers)
sink()
#saving scatterplots in png format
png(filename = '/Users/Jade/lab06/images/weight-height-plot.png')
plot(df$height, df$weight, xlab = 'Height', ylab = 'Weight')
dev.off()
png(filename = '/Users/Jade/lab06/images/weight-height-plot2.png', res = 300)
plot(df$height, df$weight, xlab = 'Height', ylab = 'Weight')
dev.off()
png(filename = '/Users/Jade/lab06/images/age-histogram.JPEG', width = 600, height = 400)
hist(df$age)
dev.off()
png(filename = '/Users/Jade/lab06/images/age-histogram.pdf', width = 7, height = 5)
hist(df$age)
dev.off()
gg_pts_salary <- ggplot(df, aes(x = points, y = salary))
ggsave('/Users/Jade/lab06/images/points_salary.pdf',
plot = gg_pts_salary,
width = 7, height = 5)
gg_ht_wt_positions <- ggplot(df, aes(height, weight)) + facet_grid(df$position ~ .)
ggsave('/Users/Jade/lab06/images/height_weight_by_position.pdf',
plot = gg_ht_wt_positions,
width = 6, height = 4)
dat1 <- read.csv('/Users/Jade/stat133-hws-fall17/hw03/data/nba2017-stats.csv')
library(dplyr)
mutate(dat1,
missed_fg = field_goals_made - field_goals_att,
missed_ft = free_throws_made - free_throws_att,
points = free_throws_att + 2*point2_made + 3*point3_made,
rebounds = off_rebounds + def_rebounds)
dat1 <- read.csv('https://github.com/ucb-stat133/stat133-fall-2017/blob/master/data/nba2017-stats.csv')
library(dplyr)
mutate(dat1,
missed_fg = field_goals_made - field_goals_att,
missed_ft = free_throws_made - free_throws_att,
points = free_throws_att + 2*point2_made + 3*point3_made,
rebounds = off_rebounds + def_rebounds)
names(dat1)
dat1 <- read.csv('https://github.com/ucb-stat133/stat133-fall-2017/blob/master/data/nba2017-stats.csv')
summary(dat1)
